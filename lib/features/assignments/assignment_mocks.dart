import 'data/models/student_assignments_list_model.dart';
import 'domain/entities/student_assignment.dart';
import 'domain/entities/student_assignments_list.dart';
import 'domain/entities/student_attachment.dart';
import 'domain/entities/teacher_assignment.dart';

///A class that contains mock data for testing Assignment features, returns mock data as a list of [StudentAssignment]s or [TeacherAssignment]s.
class AssignmentMocks {
  ///A [StudentAssignmentsList] with a list of [StudentAssignment]s.
  static final mStudentAssignments = StudentAssignmentsListModel(
    numAssignments: 1,
    numActive: 1,
    numSubmitted: 1,
    // numExpired: 1,
    // numPassed: 1,
    // numPending: 1,
    // numFailed: 1,
    assignments: [
      StudentAssignment(
        attachments: const [
          StudentAttachment(url: 'https://flutter.dev', name: 'Flutter'),
          StudentAttachment(url: 'https://flutter.dev', name: 'Flutter 2'),
        ],
        attempts: 3,
        maxAttempts: 3,
        className: 'TDD',
        courseName: 'Clean Architechture',
        deadline: DateTime.parse('2021-01-01'),
        id: 1,
        status: 'passed',
        title: 'Assignment One: getting Started',
        description: 'Create your first Test',
        firstSubmission: DateTime.parse('2021-01-02'),
        grade: 90,
        minGrade: 50,
        lastSubmission: DateTime.parse('2021-01-03'),
        maxGrade: 100,
      ),
      StudentAssignment(
        attachments: const [],
        attempts: 2,
        maxAttempts: 5,
        className: 'DES',
        courseName: 'Security',
        deadline: DateTime.parse('2022-01-01'),
        id: 1,
        status: 'passed',
        title: 'getting Started',
        description: 'Create your first Test',
        firstSubmission: DateTime.parse('2022-01-01'),
        grade: 100,
        minGrade: 65,
        lastSubmission: DateTime.parse('2022-01-01'),
        maxGrade: 100,
      ),
      StudentAssignment(
        attachments: const [],
        attempts: 1,
        maxAttempts: 5,
        className: 'SHA-256',
        courseName: 'Security',
        deadline: DateTime.parse('2021-01-01'),
        id: 1,
        status: 'pending',
        title: '#2 feet dipping',
        description: 'Create your first Test',
        firstSubmission: DateTime.parse('2021-01-01'),
        grade: 0,
        minGrade: 65,
        lastSubmission: DateTime.parse('2021-01-01'),
        maxGrade: 100,
      ),
      StudentAssignment(
        attachments: const [],
        attempts: 0,
        maxAttempts: 3,
        className: 'Hadoop',
        courseName: 'Big Data',
        deadline: DateTime.parse('2021-01-01'),
        id: 1,
        status: 'not_submitted',
        title: 'Assignment On',
        description: 'Create your first Test',
        firstSubmission: DateTime.parse('2021-01-01'),
        grade: -1,
        minGrade: 60,
        lastSubmission: DateTime.parse('2021-01-01'),
        maxGrade: 100,
      ),
      StudentAssignment(
        attachments: const [],
        attempts: 4,
        maxAttempts: 4,
        className: 'Spark',
        courseName: 'Big Data',
        deadline: DateTime.parse('2021-01-01'),
        id: 1,
        status: 'failed',
        title: 'Assignment Two',
        description: 'Create your first Test',
        firstSubmission: DateTime.parse('2021-01-01'),
        grade: 40,
        minGrade: 60,
        lastSubmission: DateTime.parse('2021-01-01'),
        maxGrade: 100,
      ),
    ],
  );

  // ///A [TeacherAssignmentsList] with a list of [TeacherAssignment]s.
  // static final mTeacherAssignments = TeacherAssignmentsListModel(
  //   numAssignments: 1,
  //   numActive: 1,
  //   numExpired: 1,
  //   numPassed: 1,
  //   numPending: 1,
  //   numFailed: 1,
  //   assignments: [
  //     TeacherAssignment(
  //       attachmentUrl: 'https://flutter.dev',
  //       attempts: 1,
  //       maxAttempts: 3,
  //       className: 'TDD',
  //       courseName: 'Clean Architechture',
  //       deadline: DateTime.parse('2021-01-01'),
  //       id: 1,
  //       status: 'pending',
  //       title: 'Assignment One: getting Started',
  //       description: 'Create your first Test',
  //       reviewDate: DateTime.parse('2021-01-01'),
  //       grade: 90,
  //       minGrade: 50,
  //       lastSubmission: DateTime.parse('2021-01-01'),
  //       activityStatus: 'active',
  //       instructorName: 'Youssef Zaka',
  //       studentEmail: 'youssef.zakaria.dev@gmail.com',
  //       studentName: 'Youssef Zaka',
  //     ),
  //   ],
  // );
}
