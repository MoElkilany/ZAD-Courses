import '../../../../../common/data/models/json/message_header.dart';
import '../../../../domain/entities/profile_info_response.dart';

class ProfileInfoResponseJsonModel extends ProfileInfoResponse {
  const ProfileInfoResponseJsonModel({
    required super.messageHeader,
    required super.id,
    required super.fullName,
    required super.roleName,
    required super.bio,
    required super.offline,
    required super.offlineMessage,
    required super.verified,
    required super.rate,
    required super.avatar,
    required super.meetingStatus,
    required super.userGroup,
    required super.address,
    required super.status,
    required super.email,
    required super.mobile,
    required super.language,
    required super.newsletter,
    required super.publicMessage,
    required super.activeSubscription,
    required super.headline,
    required super.coursesCount,
    required super.reviewsCount,
    required super.appointmentsCount,
    required super.studentsCount,
    required super.followersCount,
    required super.followingCount,
    required super.badges,
    required super.students,
    required super.followers,
    required super.following,
    required super.authUserIsFollower,
    required super.referral,
    required super.education,
    required super.experience,
    required super.occupations,
    required super.about,
    required super.courses,
    required super.meeting,
    required super.organizationTeachers,
    required super.countryId,
    required super.provinceId,
    required super.cityId,
    required super.districtId,
    required super.accountType,
    required super.iban,
    required super.accountId,
    required super.identityScan,
    required super.certificate,
  });
  factory ProfileInfoResponseJsonModel.fromJson(Map<String, dynamic> jsonMap) {
    return ProfileInfoResponseJsonModel(
      messageHeader: MessageHeaderJsonModel.fromJson(jsonMap),
      id: jsonMap['data']['user']['id'],
      fullName: jsonMap['data']['user']['full_name'],
      roleName: jsonMap['data']['user']['role_name'],
      bio: jsonMap['data']['user']['bio'],
      offline: jsonMap['data']['user']['offline'] == 1,
      offlineMessage: jsonMap['data']['user']['offline_message'],
      verified: jsonMap['data']['user']['verified'] == 1,
      rate: jsonMap['data']['user']['rate'],
      avatar: jsonMap['data']['user']['avatar'],
      meetingStatus: jsonMap['data']['user']['meeting_status'],
      userGroup: jsonMap['data']['user']['user_group'],
      address: jsonMap['data']['user']['address'],
      status: jsonMap['data']['user']['status'],
      email: jsonMap['data']['user']['email'],
      mobile: jsonMap['data']['user']['mobile'],
      language: jsonMap['data']['user']['language'],
      newsletter: jsonMap['data']['user']['newsletter'],
      publicMessage: jsonMap['data']['user']['public_message'],
      activeSubscription: jsonMap['data']['user']['active_subscription'],
      headline: jsonMap['data']['user']['headline'],
      coursesCount: jsonMap['data']['user']['courses_count'],
      reviewsCount: jsonMap['data']['user']['reviews_count'],
      appointmentsCount: jsonMap['data']['user']['appointments_count'],
      studentsCount: jsonMap['data']['user']['students_count'],
      followersCount: jsonMap['data']['user']['followers_count'],
      followingCount: jsonMap['data']['user']['following_count'],
      badges: jsonMap['data']['user']['badges'],
      students: jsonMap['data']['user']['students'],
      followers: jsonMap['data']['user']['followers'],
      following: jsonMap['data']['user']['following'],
      authUserIsFollower: jsonMap['data']['user']['auth_user_is_follower'],
      referral: jsonMap['data']['user']['referral'],
      education: jsonMap['data']['user']['education'],
      experience: jsonMap['data']['user']['experience'],
      occupations: jsonMap['data']['user']['occupations'],
      about: jsonMap['data']['user']['about'],
      courses: jsonMap['data']['user']['courses'],
      meeting: jsonMap['data']['user']['meeting'],
      organizationTeachers: jsonMap['data']['user']['organization_teachers'],
      countryId: jsonMap['data']['user']['country_id'],
      provinceId: jsonMap['data']['user']['province_id'],
      cityId: jsonMap['data']['user']['city_id'],
      districtId: jsonMap['data']['user']['district_id'],
      accountType: jsonMap['data']['user']['account_type'],
      iban: jsonMap['data']['user']['iban'],
      accountId: jsonMap['data']['user']['account_id'],
      identityScan: jsonMap['data']['user']['identity_scan'],
      certificate: jsonMap['data']['user']['certificate'],
    );
  }
  Map<String, dynamic> toJson() {
    return {
      ...messageHeader.toJson(),
      'id': id,
      'full_name': fullName,
      'role_name': roleName,
      'bio': bio,
      'offline': offline,
      'offline_message': offlineMessage,
      'verified': verified,
      'rate': rate,
      'avatar': avatar,
      'meeting_status': meetingStatus,
      'user_group': userGroup,
      'address': address,
      'status': status,
      'email': email,
      'mobile': mobile,
      'language': language,
      'newsletter': newsletter,
      'public_message': publicMessage,
      'active_subscription': activeSubscription,
      'headline': headline,
      'courses_count': coursesCount,
      'reviews_count': reviewsCount,
      'appointments_count': appointmentsCount,
      'students_count': studentsCount,
      'followers_count': followersCount,
      'following_count': followingCount,
      'badges': badges,
      'students': students,
      'followers': followers,
      'following': following,
      'auth_user_is_follower': authUserIsFollower,
      'referral': referral,
      'education': education,
      'experience': experience,
      'occupations': occupations,
      'about': about,
      'courses': courses,
      'meeting': meeting,
      'organization_teachers': organizationTeachers,
      'country_id': countryId,
      'province_id': provinceId,
      'city_id': cityId,
      'district_id': districtId,
      'account_type': accountType,
      'iban': iban,
      'account_id': accountId,
      'identity_scan': identityScan,
      'certificate': certificate,
    };
  }
}
